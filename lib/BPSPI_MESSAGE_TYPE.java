/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class BPSPI_MESSAGE_TYPE {
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_NONE = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_NONE");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_MANUFACTURER = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_MANUFACTURER");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_NAME = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_NAME");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_HARDWARE_VERSION = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_HARDWARE_VERSION");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_FIRMWARE_VERSION = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_FIRMWARE_VERSION");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_ID = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_ID");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_LED = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_LED");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_VOLTAGE_3V3 = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_VOLTAGE_3V3");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_VOLTAGE_5V = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_VOLTAGE_5V");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_VOLTAGE_9V = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_VOLTAGE_9V");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_VOLTAGE_VCC = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_VOLTAGE_VCC");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_ADDRESS = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_ADDRESS");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_SENSOR_TYPE = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_SENSOR_TYPE");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_SENSOR_1 = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_SENSOR_1");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_SENSOR_2 = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_SENSOR_2");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_SENSOR_3 = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_SENSOR_3");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_SENSOR_4 = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_SENSOR_4");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_I2C_TRANSACT_1 = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_I2C_TRANSACT_1");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_I2C_TRANSACT_2 = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_I2C_TRANSACT_2");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_I2C_TRANSACT_3 = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_I2C_TRANSACT_3");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_I2C_TRANSACT_4 = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_I2C_TRANSACT_4");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_MOTOR_POWER = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_MOTOR_POWER");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_MOTOR_POSITION = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_MOTOR_POSITION");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_MOTOR_POSITION_KP = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_MOTOR_POSITION_KP");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_MOTOR_POSITION_KD = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_MOTOR_POSITION_KD");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_MOTOR_DPS = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_MOTOR_DPS");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_MOTOR_DPS_KP = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_MOTOR_DPS_KP");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_MOTOR_DPS_KD = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_MOTOR_DPS_KD");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_SET_MOTOR_LIMITS = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_SET_MOTOR_LIMITS");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_OFFSET_MOTOR_ENCODER = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_OFFSET_MOTOR_ENCODER");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_MOTOR_A_ENCODER = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_MOTOR_A_ENCODER");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_MOTOR_B_ENCODER = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_MOTOR_B_ENCODER");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_MOTOR_C_ENCODER = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_MOTOR_C_ENCODER");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_MOTOR_D_ENCODER = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_MOTOR_D_ENCODER");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_MOTOR_A_STATUS = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_MOTOR_A_STATUS");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_MOTOR_B_STATUS = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_MOTOR_B_STATUS");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_MOTOR_C_STATUS = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_MOTOR_C_STATUS");
  public final static BPSPI_MESSAGE_TYPE BPSPI_MESSAGE_GET_MOTOR_D_STATUS = new BPSPI_MESSAGE_TYPE("BPSPI_MESSAGE_GET_MOTOR_D_STATUS");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static BPSPI_MESSAGE_TYPE swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + BPSPI_MESSAGE_TYPE.class + " with value " + swigValue);
  }

  private BPSPI_MESSAGE_TYPE(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private BPSPI_MESSAGE_TYPE(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private BPSPI_MESSAGE_TYPE(String swigName, BPSPI_MESSAGE_TYPE swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static BPSPI_MESSAGE_TYPE[] swigValues = { BPSPI_MESSAGE_NONE, BPSPI_MESSAGE_GET_MANUFACTURER, BPSPI_MESSAGE_GET_NAME, BPSPI_MESSAGE_GET_HARDWARE_VERSION, BPSPI_MESSAGE_GET_FIRMWARE_VERSION, BPSPI_MESSAGE_GET_ID, BPSPI_MESSAGE_SET_LED, BPSPI_MESSAGE_GET_VOLTAGE_3V3, BPSPI_MESSAGE_GET_VOLTAGE_5V, BPSPI_MESSAGE_GET_VOLTAGE_9V, BPSPI_MESSAGE_GET_VOLTAGE_VCC, BPSPI_MESSAGE_SET_ADDRESS, BPSPI_MESSAGE_SET_SENSOR_TYPE, BPSPI_MESSAGE_GET_SENSOR_1, BPSPI_MESSAGE_GET_SENSOR_2, BPSPI_MESSAGE_GET_SENSOR_3, BPSPI_MESSAGE_GET_SENSOR_4, BPSPI_MESSAGE_I2C_TRANSACT_1, BPSPI_MESSAGE_I2C_TRANSACT_2, BPSPI_MESSAGE_I2C_TRANSACT_3, BPSPI_MESSAGE_I2C_TRANSACT_4, BPSPI_MESSAGE_SET_MOTOR_POWER, BPSPI_MESSAGE_SET_MOTOR_POSITION, BPSPI_MESSAGE_SET_MOTOR_POSITION_KP, BPSPI_MESSAGE_SET_MOTOR_POSITION_KD, BPSPI_MESSAGE_SET_MOTOR_DPS, BPSPI_MESSAGE_SET_MOTOR_DPS_KP, BPSPI_MESSAGE_SET_MOTOR_DPS_KD, BPSPI_MESSAGE_SET_MOTOR_LIMITS, BPSPI_MESSAGE_OFFSET_MOTOR_ENCODER, BPSPI_MESSAGE_GET_MOTOR_A_ENCODER, BPSPI_MESSAGE_GET_MOTOR_B_ENCODER, BPSPI_MESSAGE_GET_MOTOR_C_ENCODER, BPSPI_MESSAGE_GET_MOTOR_D_ENCODER, BPSPI_MESSAGE_GET_MOTOR_A_STATUS, BPSPI_MESSAGE_GET_MOTOR_B_STATUS, BPSPI_MESSAGE_GET_MOTOR_C_STATUS, BPSPI_MESSAGE_GET_MOTOR_D_STATUS };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

